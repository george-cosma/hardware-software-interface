"use strict";(self.webpackChunkhardware_software_interface=self.webpackChunkhardware_software_interface||[]).push([[9632],{5680:(e,t,r)=>{r.d(t,{xA:()=>u,yg:()=>h});var a=r(6540);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,a,n=function(e,t){if(null==e)return{};var r,a,n={},o=Object.keys(e);for(a=0;a<o.length;a++)r=o[a],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)r=o[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var f=a.createContext({}),s=function(e){var t=a.useContext(f),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},u=function(e){var t=s(e.components);return a.createElement(f.Provider,{value:t},e.children)},c="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,o=e.originalType,f=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),c=s(r),d=n,h=c["".concat(f,".").concat(d)]||c[d]||p[d]||o;return r?a.createElement(h,i(i({ref:t},u),{},{components:r})):a.createElement(h,i({ref:t},u))}));function h(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var o=r.length,i=new Array(o);i[0]=d;var l={};for(var f in t)hasOwnProperty.call(t,f)&&(l[f]=t[f]);l.originalType=e,l[c]="string"==typeof e?e:n,i[1]=l;for(var s=2;s<o;s++)i[s]=r[s];return a.createElement.apply(null,i)}return a.createElement.apply(null,r)}d.displayName="MDXCreateElement"},692:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>f,contentTitle:()=>i,default:()=>p,frontMatter:()=>o,metadata:()=>l,toc:()=>s});var a=r(8168),n=(r(6540),r(5680));const o={},i="Buffer on the Stack",l={unversionedId:"Lab 11 - Buffer Management. Buffer Overflow/Introduction to Buffers/Drills/Tasks/Stack Buffer/README",id:"Lab 11 - Buffer Management. Buffer Overflow/Introduction to Buffers/Drills/Tasks/Stack Buffer/README",title:"Buffer on the Stack",description:"Access the drills/tasks/stack-buffer/support/ directory from the lab resource archive and consult the stack_buffer.asm file.",source:"@site/docs/Lab 11 - Buffer Management. Buffer Overflow/Introduction to Buffers/Drills/Tasks/Stack Buffer/README.md",sourceDirName:"Lab 11 - Buffer Management. Buffer Overflow/Introduction to Buffers/Drills/Tasks/Stack Buffer",slug:"/Lab 11 - Buffer Management. Buffer Overflow/Introduction to Buffers/Drills/Tasks/Stack Buffer/",permalink:"/hardware-software-interface/Lab 11 - Buffer Management. Buffer Overflow/Introduction to Buffers/Drills/Tasks/Stack Buffer/",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"sidebar",previous:{title:"Buffer in the `.data` Section",permalink:"/hardware-software-interface/Lab 11 - Buffer Management. Buffer Overflow/Introduction to Buffers/Drills/Tasks/Data Buffer/"},next:{title:"Reading Data from Standard Input",permalink:"/hardware-software-interface/Lab 11 - Buffer Management. Buffer Overflow/Introduction to Buffers/Drills/Tasks/Read Using gets/"}},f={},s=[{value:"Part 1",id:"part-1",level:2},{value:"Part 2",id:"part-2",level:2},{value:"Part 3",id:"part-3",level:2}],u={toc:s},c="wrapper";function p(e){let{components:t,...r}=e;return(0,n.yg)(c,(0,a.A)({},u,r,{components:t,mdxType:"MDXLayout"}),(0,n.yg)("h1",{id:"buffer-on-the-stack"},"Buffer on the Stack"),(0,n.yg)("p",null,"Access the ",(0,n.yg)("inlineCode",{parentName:"p"},"drills/tasks/stack-buffer/support/")," directory from the lab resource archive and consult the ",(0,n.yg)("inlineCode",{parentName:"p"},"stack_buffer.asm")," file.\nThis file contains a program that populates a buffer with information and then displays it.\nIt is similar to the one above, but now the buffer is allocated on the stack."),(0,n.yg)("p",null,"The task will contain 3 parts."),(0,n.yg)("h2",{id:"part-1"},"Part 1"),(0,n.yg)("p",null,"Carefully review the program, then compile it using the command:"),(0,n.yg)("pre",null,(0,n.yg)("code",{parentName:"pre",className:"language-Bash"},"make\n")),(0,n.yg)("p",null,"then run it using the command:"),(0,n.yg)("pre",null,(0,n.yg)("code",{parentName:"pre",className:"language-Bash"},"./stack_buffer\n")),(0,n.yg)("p",null,"Observe the behavior of the program according to its code."),(0,n.yg)("p",null,"In addition to the buffer, we have also allocated a local variable of 4 bytes, accessible at the address ",(0,n.yg)("inlineCode",{parentName:"p"},"ebp - 4"),".\nIt is initialized to the value ",(0,n.yg)("inlineCode",{parentName:"p"},"0xCAFEBABE"),".\nThis variable will be important later on.\nWhat is relevant now is to know that this variable is in memory ",(0,n.yg)("strong",{parentName:"p"},"immediately after the buffer"),": when the buffer limit is exceeded, you reach this variable."),(0,n.yg)("p",null,"What is the difference between the two programs inspected so far?"),(0,n.yg)("h2",{id:"part-2"},"Part 2"),(0,n.yg)("p",null,"Now that we have seen what the buffer looks like in memory and where the variable is placed,\nupdate the ",(0,n.yg)("inlineCode",{parentName:"p"},"stack_buffer.asm")," program so that the buffer display sequence\n(Look for ",(0,n.yg)("strong",{parentName:"p"},"TODO 1"),") also leads to the display of the variable's bytes.\nIt is a case of read buffer overflow, with the objective of ",(0,n.yg)("strong",{parentName:"p"},"information leak"),": finding out information from memory."),(0,n.yg)("blockquote",null,(0,n.yg)("p",{parentName:"blockquote"},(0,n.yg)("strong",{parentName:"p"},"HINT"),' It\'s not complicated, you just need to "instruct" the display sequence to use a different limit for display,\nnot the current limit of 64 bytes.')),(0,n.yg)("p",null,"Follow ",(0,n.yg)("strong",{parentName:"p"},"TODO 2")," and display other information beyond the local variable.\nWhat information comes on the stack after the local variable (the next 4 bytes)?\nAnd the next 4 bytes after?"),(0,n.yg)("h2",{id:"part-3"},"Part 3"),(0,n.yg)("p",null,"Based on the experience above, make changes so that the variable's value is ",(0,n.yg)("inlineCode",{parentName:"p"},"0xDEADBEEF"),"\n(instead of ",(0,n.yg)("inlineCode",{parentName:"p"},"0xCAFEBABE")," as it is initially) without, however, explicitly modifying the variable's value.\nLook for ",(0,n.yg)("strong",{parentName:"p"},"TODO 3")," and use the buffer modification and the ",(0,n.yg)("inlineCode",{parentName:"p"},"ebx")," register in which we stored the start address of the buffer."),(0,n.yg)("blockquote",null,(0,n.yg)("p",{parentName:"blockquote"},(0,n.yg)("strong",{parentName:"p"},"TIP")," Again, it's not complicated.\nYou need to use the ",(0,n.yg)("inlineCode",{parentName:"p"},"ebx")," value and an offset to write the ",(0,n.yg)("inlineCode",{parentName:"p"},"0xDEADBEEF")," value at that address.\nThat is, use a construction like:")),(0,n.yg)("pre",null,(0,n.yg)("code",{parentName:"pre",className:"language-Assembly"},"mov byte [ebx + TODO], TODO\n")),(0,n.yg)("blockquote",null,(0,n.yg)("p",{parentName:"blockquote"},"Do this after the buffer initialization sequence (after the ",(0,n.yg)("inlineCode",{parentName:"p"},"jl fill_byte")," instruction).")),(0,n.yg)("p",null,"With a correct solution to this exercise, the program will display the ",(0,n.yg)("inlineCode",{parentName:"p"},"0xDEADBEEF")," value for the local variable."),(0,n.yg)("p",null,"If you're having difficulties solving this exercise, go through ",(0,n.yg)("a",{parentName:"p",href:"/hardware-software-interface/Lab%2011%20-%20Buffer%20Management.%20Buffer%20Overflow/Introduction%20to%20Buffers/Reading/#What-is-a-Buffer-Overflow?"},"this")," reading material."))}p.isMDXComponent=!0}}]);